// Code generated by mockery v2.11.0. DO NOT EDIT.

package mocks

import (
	http "net/http"
	testing "testing"

	mock "github.com/stretchr/testify/mock"
)

// Invoker is an autogenerated mock type for the Invoker type
type Invoker struct {
	mock.Mock
}

// Invoke provides a mock function with given fields: fnName
func (_m *Invoker) Invoke(fnName string) (*http.Response, error) {
	ret := _m.Called(fnName)

	var r0 *http.Response
	if rf, ok := ret.Get(0).(func(string) *http.Response); ok {
		r0 = rf(fnName)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*http.Response)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(fnName)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewInvoker creates a new instance of Invoker. It also registers a cleanup function to assert the mocks expectations.
func NewInvoker(t testing.TB) *Invoker {
	mock := &Invoker{}

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
