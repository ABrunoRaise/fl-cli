// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// DevDeployer is an autogenerated mock type for the DevDeployer type
type DevDeployer struct {
	mock.Mock
}

// CreateFLNetwork provides a mock function with given fields: ctx
func (_m *DevDeployer) CreateFLNetwork(ctx context.Context) error {
	ret := _m.Called(ctx)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// PullCoreImage provides a mock function with given fields: ctx
func (_m *DevDeployer) PullCoreImage(ctx context.Context) error {
	ret := _m.Called(ctx)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// PullWorkerImage provides a mock function with given fields: ctx
func (_m *DevDeployer) PullWorkerImage(ctx context.Context) error {
	ret := _m.Called(ctx)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RemoveCoreContainer provides a mock function with given fields: ctx
func (_m *DevDeployer) RemoveCoreContainer(ctx context.Context) error {
	ret := _m.Called(ctx)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RemoveFLNetwork provides a mock function with given fields: ctx
func (_m *DevDeployer) RemoveFLNetwork(ctx context.Context) error {
	ret := _m.Called(ctx)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RemoveWorkerContainer provides a mock function with given fields: ctx
func (_m *DevDeployer) RemoveWorkerContainer(ctx context.Context) error {
	ret := _m.Called(ctx)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Setup provides a mock function with given fields: ctx, coreImg, workerImg
func (_m *DevDeployer) Setup(ctx context.Context, coreImg string, workerImg string) error {
	ret := _m.Called(ctx, coreImg, workerImg)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string) error); ok {
		r0 = rf(ctx, coreImg, workerImg)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// StartCore provides a mock function with given fields: ctx
func (_m *DevDeployer) StartCore(ctx context.Context) error {
	ret := _m.Called(ctx)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// StartWorker provides a mock function with given fields: ctx
func (_m *DevDeployer) StartWorker(ctx context.Context) error {
	ret := _m.Called(ctx)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewDevDeployer interface {
	mock.TestingT
	Cleanup(func())
}

// NewDevDeployer creates a new instance of DevDeployer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewDevDeployer(t mockConstructorTestingTNewDevDeployer) *DevDeployer {
	mock := &DevDeployer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
