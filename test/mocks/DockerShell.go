// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// DockerShell is an autogenerated mock type for the DockerShell type
type DockerShell struct {
	mock.Mock
}

// ComposeDown provides a mock function with given fields: composeFilePath
func (_m *DockerShell) ComposeDown(composeFilePath string) error {
	ret := _m.Called(composeFilePath)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(composeFilePath)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ComposeUp provides a mock function with given fields: composeFilePath
func (_m *DockerShell) ComposeUp(composeFilePath string) error {
	ret := _m.Called(composeFilePath)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(composeFilePath)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewDockerShell interface {
	mock.TestingT
	Cleanup(func())
}

// NewDockerShell creates a new instance of DockerShell. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewDockerShell(t mockConstructorTestingTNewDockerShell) *DockerShell {
	mock := &DockerShell{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
